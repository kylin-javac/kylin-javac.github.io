<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[linux 下的简单命令和git版本管理控制工具的使用]]></title>
    <url>%2F2018%2F04%2F05%2Flinux%E4%B8%8B%E7%9A%84%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[内容可能不是很深入详细，但是我每天都要用到的命令,抽了个时间简单的整理了下 1.linux 下的简单命令 cd .. #返回上一级目录 cd ~ #返回当前用户的根目录 cd // #返回系统的跟目录 . ./xxx.sh #执行shell脚本 chmod 777 file #将系统的最高权限授予这个文件,root 用户组 当前用户 读 写 可执行 每个用户都有后面三种权限 chmod 777 -r filename #将系统的最高权限授予这个文件以及该文件夹下的子文件(递归到单个文件) cp 目标.file 复制到哪里的路径 #复制单个文件 cp -r 目标.filename 复制到哪里的路径 #复制整个目录下的文件 scp -r 用户名@主机地址:文件或文件夹 目标地址 #复制远程计算机中的文件到本地计算机中 tar -zxvf xxx.gz -C /解压路径 #将压缩包解压到指定路径 tar -cxvf 文件名.tar 需要打包的文件或文件夹路径 #将文件或文件夹打包 ssh 用户名@主机地址 #在ubuntu终端中登录远程主机 vim 的操作1. esc #这是一个万能键 他可以在任何模式下进行切换2.i #由命令模式进入编辑模式并将光标定位当前位置a #由命令模式进入编辑模式并将光标定位当前位置的后一位o #由命令模式进入编辑模式另一起行将光标定位到行首3. 命令模式中 h #光标向右移一个位置 l #光标向左移一个位置 k #光标向上移动一行 j #光标向下移动一行 u #撤回 yy #复制当前行 p #粘贴剪贴版中的内容 /str #查找相应的字符 找到后按n跳转到下一个匹配处 /vsp file #可以竖屏显示的方式打开其他文本文件,这招很好用尤其是比对两个文件时 有一些常用的服务需要配置比如sshServer端，ftpServer端 sambaServer端，当然还有如何安装linux.这些过程都需要截图才能 表达清楚，不然只粘贴命令会让人不知所云。 用linux开发一般都会装sshServer和sambaServer，sambaServer用来适应windows环 境(毕竟有些人还是喜欢用鼠标)sshSever 则可以用来在服务器上修改代码和编译软件 2.git版本管理控制命令的使用git 的命令很简单 但结合着Androi源码这样的工程去用会让你对他独自发叹(道行不深，资历太浅) git status # 当前仓库的状态，哪些文件已经更改,哪些文件未添加进来 git diff # 当前仓库状态中的文件和上一次提交代码时文件做了哪些改动,改动的异同点都会标出来 git add file # 将更改或未添加的文件添加到仓库中区 git rm file # 将仓库中原有的文件移除出仓库 git commit -m “更改内容说明” # 将文件提交到本地仓库 git pull 远程仓库地址 #拉取远程服务器中的代码，合并冲突(多说一句 这种方式只有其实是让git帮我们合并代码,我们自己不merge，只有双方都改了同一个地方，git才会报出冲突警告，其他的他就自己干了，这样其实有优点也有缺点,这个坑比较深,,,,,,) git clone ssh://用户名@主机地址/仓库地址 #克隆远程服务器仓库代码 git pull ssh://用户名@主机地址/仓库地址 #拉取远程服务器仓库代码 3.adb 命令的简单使用 adb remount #重新挂载一下Android主机 adb push loca.apk data/appi #将apk推送到Android data/app目录 adb shell reboot #重启Android机器 adb shell #进入Android主机的shell环境 adb shell am startService 应用名/包名.类名 #手动启动服务]]></content>
  </entry>
  <entry>
    <title><![CDATA[The Second one is the second Blog]]></title>
    <url>%2F2018%2F04%2F05%2Fhello-world%2F</url>
    <content type="text"><![CDATA[哈哈 欢迎来到我的新站,想把CSDN的博客全部移过来的 但能力有限还没找到实用的解决方法这是原来CSDN的地址为了不显得空荡，我还是找几篇文章，显示个列表出来MVP大法好Mvp+Rxandroid+Retrofit的简单实现12MVP+Rxandroid+Reterofit能将替代传统的Handler+接口回调+网络请求的方式,简化代码，提高代码的可复用性，虽然我没能够将其运用到真实项目中,但是我的毕业设计可是把玩了个遍 这是CSDN博客地址: 点点 React for Android12Windows 下搭建 React Native for Android 环境 这个纯粹是拿来玩的,但移动端确实是在走下坡路,技不压身,多学点总比没听过要好 来来瞅瞅: 点点就知道 事件分发12Android中的事件分发,其实自定义View一直是我的软肋，而事件分发却是自定义view的基础,这篇文章当时写的时候是弄明白了的，但是现在好像又忘了...当时是用为知笔记写的截图不见了。。。。 博客地址: 坑了个爹 Handler 原理浅析123456Handler的基本原理浅谈，handler 是用于线程间通信的一种机制主要用于子线程耗时操作,主线程更新UI,他们见的切换,是google官方设计好的一套API,从java层面简单的分析了下原理,几个组成部分,几个组成部分之间的调用关系,循环的原理,handler容易绕的地方，就是看似是只有一个变量，但他却完成了两个线程的通信最近一直在研究binder驱动原理,越看越有趣,好像懂了，但是要移植一下又懵逼了,要想彻底弄懂binder驱动，涉及的知识会多一些，看似每天不着调的学习，其实我在为binder打基础呢？哈哈 先看看handler,binder我是一定会搞明白的 哈哈哈: enjoy life]]></content>
  </entry>
</search>
